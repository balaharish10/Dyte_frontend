{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.js","components/App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialvalue","prefixedkey","React","useState","jsonvalue","localStorage","getItem","JSON","parse","value","setvalue","useEffect","setItem","stringify","Editor","props","displayname","language","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","App","srcdoc","setsrcdoc","html","sethtml","css","setcss","js","setjs","timeout","setTimeout","clearTimeout","srcDoc","width","title","sandbox","height","frameBorder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAIe,SAASA,EAAgBC,EAAIC,GACxC,IAAMC,EAHG,YAGkBF,EAC3B,EAAsBG,IAAMC,UAAS,WACjC,IAAMC,EAAUC,aAAaC,QAAQL,GACrC,OAAc,MAAXG,EAAwBG,KAAKC,MAAMJ,GACnC,oBAAOJ,EAAkCA,IAChCA,KAJhB,mBAAMS,EAAN,KAAYC,EAAZ,KAUA,OAHAC,qBAAU,WACdN,aAAaO,QAAQX,EAAYM,KAAKM,UAAUJ,MAC1C,CAACR,EAAYQ,IACR,CAACA,EAAMC,G,gDCTH,SAASI,EAAOC,GAC3B,IAAOC,EAAqCD,EAArCC,YAAYC,EAAyBF,EAAzBE,SAASR,EAAgBM,EAAhBN,MAAMS,EAAUH,EAAVG,SAIlC,OACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,eAAf,SACXH,IAEW,cAAC,aAAD,CACAI,eATR,SAAsBC,EAAOC,EAAKb,GAC9BS,EAAST,IASLA,MAAOA,EACPU,UAAU,sBACVI,QAAS,CACLC,cAAa,EACbC,MAAM,EACNC,KAAKT,EACLU,aAAa,EACbC,MAAM,iBC4BPC,MAjDf,WACE,MAAyB3B,IAAMC,SAAS,IAAxC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAqBjC,EAAgB,OAAO,IAA5C,mBAAOkC,EAAP,KAAYC,EAAZ,KACA,EAAmBnC,EAAgB,MAAM,IAAzC,mBAAOoC,EAAP,KAAWC,EAAX,KACA,EAAiBrC,EAAgB,KAAK,KAAtC,mBAAOsC,EAAP,KAAUC,EAAV,KACA,EAAwBnC,IAAMC,SAAS,GAAvC,mBAiBA,OAjBA,UAEAQ,qBAAU,WACR,IAAM2B,EAAQC,YAAW,WACvBR,EAAU,gCAAD,OAEAC,EAFA,kCAGAE,EAHA,oCAICE,EAJD,gCAMT,KACF,OAAO,kBAAKI,aAAaF,MACzB,CAACN,EAAKE,EAAIE,IAMV,qCACD,8BACE,yDAEC,sBAAKjB,UAAU,WAAf,UACE,cAACL,EAAD,CAAQG,SAAS,OAAOD,YAAY,OAAOP,MAAOuB,EAAMd,SAAUe,IAClE,cAACnB,EAAD,CAAQG,SAAS,MAAMD,YAAY,MAAMP,MAAOyB,EAAKhB,SAAUiB,IAC/D,cAACrB,EAAD,CAAQG,SAAS,aAAaD,YAAY,aAAaP,MAAO2B,EAAIlB,SAAUmB,OAEtE,qBAAKlB,UAAU,cAAf,SACN,wBACAsB,OAAQX,EACRY,MAAM,OACNC,MAAM,SACNC,QAAQ,gBACRC,OAAO,OACPC,YAAY,YChCLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e7b43dc.chunk.js","sourcesContent":["import { useEffect,useState } from \"react\";\r\nimport React from 'react'\r\nconst prefix=`PROJECTS-`\r\n\r\nexport default function useLocalStorage(key,initialvalue) {\r\n    const prefixedkey=prefix + key\r\n    const[value,setvalue]=React.useState(()=>{ \r\n        const jsonvalue=localStorage.getItem(prefixedkey)\r\n        if(jsonvalue!=null) return JSON.parse(jsonvalue)\r\n        if(typeof initialvalue===`function`) return initialvalue()\r\n        else return initialvalue\r\n\r\n    })\r\n    useEffect(()=>{\r\nlocalStorage.setItem(prefixedkey,JSON.stringify(value))\r\n    },[prefixedkey,value])\r\n    return [value,setvalue]\r\n}\r\n","import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport {Controlled as Cedit} from 'react-codemirror2'\r\nexport default function Editor(props) {\r\n    const {displayname,language,value,onChange}=props\r\n    function handlechange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-title\">\r\n{displayname}\r\n            </div>\r\n            <Cedit\r\n            onBeforeChange={handlechange}\r\n            value={value}\r\n            className=\"code-mirror-wrapper\"\r\n            options={{\r\n                lineWrapping:true,\r\n                lint: true,\r\n                mode:language,\r\n                lineNumbers: true,\r\n                theme:'material',\r\n\r\n                \r\n            }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n","\nimport React, { useState ,useEffect} from \"react\";\nimport {Tabs,Tab,AppBar} from '@material-ui/core';\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport Editor from './Editor'\nfunction App() {\n  const [srcdoc,setsrcdoc]=React.useState('')\n  const [html,sethtml]=useLocalStorage('html','')\n  const [css,setcss]=useLocalStorage('css','')\n  const [js,setjs]=useLocalStorage('js',' ')\n  const [value,setValue]= React.useState(0)\n  \n  useEffect(()=>{\n    const timeout=setTimeout(()=>{\n      setsrcdoc( `\n      <html>\n      <body> ${html} </body>\n     <style> ${css} </style>\n     <script> ${js}</script>\n      </html>`)\n    },250)\n    return () =>clearTimeout(timeout)\n  },[html,css,js])\n  const changer = (event,value)=>{\nsetValue(value);\n  }\n\n  return (\n    <>\n   <div>\n     <h1>Dyte_Project_Frontend</h1>\n      </div>\n      <div className=\"Top_pane\">\n        <Editor language=\"HTML\" displayname=\"HTML\" value={html} onChange={sethtml} />\n        <Editor language=\"CSS\" displayname=\"CSS\" value={css} onChange={setcss} />\n        <Editor language=\"JAVASCRIPT\" displayname=\"JAVASCRIPT\" value={js} onChange={setjs}/>\n              </div>\n              <div className=\"Bottom_pane\">\n        <iframe \n        srcDoc={srcdoc}\n        width=\"100%\"\n        title=\"output\"\n        sandbox=\"allow-scripts\"\n        height=\"100%\"\n        frameBorder=\"0\"\n\n        />\n        \n      </div>\n\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}